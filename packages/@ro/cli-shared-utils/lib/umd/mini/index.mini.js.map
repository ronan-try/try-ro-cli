{"version":3,"file":"index.mini.js","sources":["../../../src/chalkText.ts","../../../src/logStep.ts","../../../src/trimOnlyEnd.ts"],"sourcesContent":["import { red, cyan, yellow, green, redBright, cyanBright, gray } from 'chalk';\n\nexport const textRed = (msg: string) => red(msg);\n\nexport const textCyan = (msg: string)=> cyan(msg);\n\nexport const textYellow = (msg: string) => yellow(msg);\n\nexport const textGreen = (msg: string) => green(msg);\n\nexport const textGray = (msg: string) => gray(msg);\n\nexport const textRedBright = (msg: string) => redBright(msg);\n\nexport const textCyanBright = (msg: string) => cyanBright(msg);\n","import { textGray } from './chalkText';\n\nexport const logStep = (msg: string) => {\n  console.log('\\n', textGray(msg), '\\n');\n};\n","/** 字符串trimEnd, 区别于lodash.trimEnd */\nexport const trimOnlyEnd = (str: string, chars: string): string => {\n  if (str && chars === void 0) return str;\n  if (!str) return str;\n\n  const lastIndex = str.lastIndexOf(chars);\n\n  return str.slice(0, lastIndex);\n};\n\n// export const trimOnlyEnd = (str, chars) => {\n//   if (str && chars === void 0) return str;\n//   if (!str) return str;\n\n//   const strSplit = (str + '').split(chars);\n\n//   const result = strSplit.reduce((pre, cur, curIndex, arr) => {\n//     if (arr.length === curIndex + 1) {\n//       return pre;\n//     }\n//     if (cur === '') {\n//       return pre + chars + cur;\n//     }\n\n//     return pre + cur;\n//   }, '');\n\n//   return result;\n// };\n"],"names":["textGray","msg","gray","console","log","cyan","cyanBright","green","red","redBright","yellow","str","chars","lastIndex","lastIndexOf","slice"],"mappings":"sRAUaA,EAAYC,GAAgBC,OAAKD,aCRtBA,IACtBE,QAAQC,IAAI,KAAMJ,EAASC,GAAM,kBDCVA,GAAeI,OAAKJ,oBAUdA,GAAgBK,aAAWL,4BANhCA,GAAgBM,QAAMN,aANxBA,GAAgBO,MAAIP,mBAUdA,GAAgBQ,YAAUR,gBAN7BA,GAAgBS,SAAOT,iBELvB,CAACU,EAAaC,QACnCD,QAAiB,IAAVC,EAAkB,OAAOD,MAC/BA,EAAK,OAAOA,QAEXE,EAAYF,EAAIG,YAAYF,UAE3BD,EAAII,MAAM,EAAGF"}